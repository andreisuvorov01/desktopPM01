<Window x:Class="personal_computer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:personal_computer"
        xmlns:vm ="clr-namespace:personal_computer.ViewModel"
        mc:Ignorable="d"
        Title="Персональный компьютер"
        Height="600"
        Width="1000"
        MaxHeight="600"
        MaxWidth="1000"
        MinHeight="600"
        MinWidth="1000"
        ResizeMode="NoResize"
        Topmost="True"
        
        WindowStyle="SingleBorderWindow"
        WindowStartupLocation="CenterScreen"
        Background="#3B6F9C">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ControlTemplate x:Key="TopMenuButtons" TargetType="Button">
            <Grid Name="Btn" Height="40" Margin="20,0,0,0">
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"
                               Background="Transparent" FontSize="23"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}"
                                                     Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Content="{TemplateBinding Content}"
                           Background="Transparent" Margin="-3,0,0,0"
                           VerticalAlignment="Center" FontSize="23"
                           FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsFocused}" Value="true">
                                            <DataTrigger.Setters>
                                                <Setter Property="Effect" >
                                                        <Setter.Value>
                                                            <BlurEffect Radius="25"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                    </Label>
                    </Grid>
                    <Border.Style >
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsPressed}" Value="true">
                                    <Setter Property="Margin" Value="0,2,0,0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SlideMenuBtn" TargetType="Button">
            <Grid Name="Btn" Height="45">
                <Border>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource ResourceKey=img}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Height="30" Width="30" Stretch="Fill" Margin="20,0,0,0"/>
                        <Label Content="{TemplateBinding Content}" Margin="10,0,0,0"
                               Background="Transparent" FontSize="14"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}"
                                                     Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </StackPanel>
                </Border>
                <Border Name="MouseOverBorder" Background="Gray">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}"
                                                     Value="true">
                                    <Setter Property="Opacity" Value="0.1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Name="IsSelectedBorder" Background="Gray">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsFocused}" Value="true">
                                    <Setter Property="Opacity" Value="0.1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Name="IsSelectedBorder2" Background="Transparent">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="BorderThickness" Value="3,0,0,0"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                           Path = IsFocused}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220px"  x:Name="slide_width"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="80px"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Frame Grid.Column="1"  Grid.Row="1" NavigationUIVisibility="Hidden" Content="{Binding CurPage}" x:Name="text" />
        <Grid Grid.Row="0" Name="Top_menu" Grid.ColumnSpan="2">
            <Border BorderThickness="1" Background="Transparent" BorderBrush="#5F1C9C">
                <StackPanel Orientation="Horizontal">
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="Лекции"  Command="{Binding OpenMatPage}"/>
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="справка" Command="{Binding OpenSparvkaPage}"/>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Name="slidemenu" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Width" Value="225"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=openCloseSlideMenuBtn}"
                                                     Value="true">
                            <Setter Property="Width" Value="60"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Border BorderThickness="1,0,1,0" BorderBrush="#5F1C9C"/>
            <Border BorderThickness="0" Background="Black" Opacity="0.6"/>
            <StackPanel Orientation="Vertical">
            <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenMatPage}"
            Content="Материнская плата">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                          res/icons/MotherBoard.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenCpuPage}"
                        Content="процессор">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                            res/icons/cpu.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenVideoCardPage}"
                        Content="Видеокарта">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                            res/icons/videoCard.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenMemoryPage}"
                        Content="Оперативная память">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                            res/icons/ram.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenHardDiskPage}"
                        Content="жёсткий диск">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                            res/icons/hardDisk.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}" Command="{Binding OpenBoxPage}"
                        Content="корпус">
                    <Button.Resources>
                        <ImageSource x:Key="img">
                            res/icons/box.png
                        </ImageSource>
                    </Button.Resources>
                </Button>
               
            </StackPanel>
            <ToggleButton Focusable="False" x:Name="openCloseSlideMenuBtn" Height="20" Width="20"
                          VerticalAlignment="Bottom" HorizontalAlignment="Left"
                          Margin="20,0,0,20" Checked="openCloseSlideMenuBtn_Checked">
                <ToggleButton.Template>
                    <ControlTemplate>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="res/icons/close.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type ToggleButton}},
                                           Path = IsChecked}" Value="true">
                                            <Setter Property="Source" Value="res/icons/open.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </Grid>
    </Grid>

</Window>
